[project]
name = "learnflix"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "Damian PomykaÅ‚a", email = "168227269+dpomykala@users.noreply.github.com" }
]
requires-python = ">=3.13"
dependencies = []

[project.scripts]
learnflix = "learnflix.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "mkdocs-material>=9.5.49",
    "mkdocstrings[python]>=0.27.0",
    "pre-commit>=4.0.1",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "ruff>=0.9.0",
]

[tool.coverage.run]
branch = true
data_file = "coverage/data"
source = ["src", "tests"]

[tool.coverage.report]
skip_covered = true
skip_empty = true
sort = "-cover"

[tool.coverage.html]
directory = "coverage/html"

[tool.pyright]
include = ["src", "tests"]
venv = ".venv"
venvPath = "."

[tool.ruff]
required-version = "==0.9.0"

[tool.ruff.format]
# Enable reformatting of code snippets in docstrings
docstring-code-format = true

[tool.ruff.lint]
# See: https://docs.astral.sh/ruff/rules/
select = [
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # Line too long - handled by the formatter
]

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true
